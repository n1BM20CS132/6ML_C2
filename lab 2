{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.7.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2023-04-05T09:59:44.723128Z","iopub.execute_input":"2023-04-05T09:59:44.724372Z","iopub.status.idle":"2023-04-05T09:59:44.732358Z","shell.execute_reply.started":"2023-04-05T09:59:44.724321Z","shell.execute_reply":"2023-04-05T09:59:44.731102Z"},"trusted":true},"execution_count":4,"outputs":[{"name":"stdout","text":"/kaggle/input/enjoysport-candi-elmicsv/enjoysport_candi_elmi.csv\n","output_type":"stream"}]},{"cell_type":"code","source":"import csv\ndef updateHypothesis(x,h):\n  if h==[]:\n    return x;\n  for i in range(0,len(h)-1):\n    if x[i].upper()!=h[i].upper():\n      h[i]=\"?\"\n  return h\n\n\ndata=[]\nh=[]\n\nwith open('/kaggle/input/enjoysport-candi-elmicsv/enjoysport_candi_elmi.csv','r') as file:\n  reader = csv.reader(file)\n  print(\"Data\")\n  for row in reader:\n    data.append(row)\n    print(row)\nif data:\n  for x in data:\n    if x[-1].upper()==\"YES\":x.pop()\n    h = updateHypothesis(x,h)\nprint(\"\\nHypothesis:\",h)","metadata":{"execution":{"iopub.status.busy":"2023-04-05T10:01:24.475647Z","iopub.execute_input":"2023-04-05T10:01:24.476105Z","iopub.status.idle":"2023-04-05T10:01:24.495716Z","shell.execute_reply.started":"2023-04-05T10:01:24.476065Z","shell.execute_reply":"2023-04-05T10:01:24.494118Z"},"trusted":true},"execution_count":6,"outputs":[{"name":"stdout","text":"Data\n['sky', 'airtemp', 'humidity', 'wind', 'water', 'forcast', 'enjoysport']\n['sunny', 'warm', 'normal', 'strong', 'warm', 'same', 'yes']\n['sunny', 'warm', 'high', 'strong', 'warm', 'same', 'yes']\n['rainy', 'cold', 'high', 'strong', 'warm', 'change', 'no']\n['sunny', 'warm', 'high', 'strong', 'cool', 'change', 'yes']\n\nHypothesis: ['?', '?', '?', '?', '?', '?', 'enjoysport']\n","output_type":"stream"}]}]}
